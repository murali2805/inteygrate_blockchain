//
// Generated by TelegramJSON2Apex http://TelegramJSON2Apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class TelegramJSON2Apex {

	public Integer update_id {get;set;} 
	public Message message {get;set;} 

	public TelegramJSON2Apex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'update_id') {
						update_id = parser.getIntegerValue();
					} else if (text == 'message') {
						message = new Message(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'TelegramJSON2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Message {
		public Integer message_id {get;set;} 
		public From_Z from_Z {get;set;} // in json: from
		public Chat chat {get;set;} 
		public Integer tdate {get;set;} 
		public String text {get;set;} 

		public Message(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String mtext = parser.getText();
					System.debug('this is text in Message:'+mtext);
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (mtext == 'message_id') {
							message_id = parser.getIntegerValue();
						} else if (mtext == 'from') {
							from_Z = new From_Z(parser);
						} else if (mtext == 'chat') {
							chat = new Chat(parser);
						} else if (mtext == 'date') {
							tdate = parser.getIntegerValue();
						} else if (mtext == 'text') {
							text = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Message consuming unrecognized property: '+mtext);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class From_Z {
		public Integer tid {get;set;} 
		public Boolean is_bot {get;set;} 
		public String first_name {get;set;} 
		public String last_name {get;set;} 
		public String language_code {get;set;} 

		public From_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'id') {
							tid = parser.getIntegerValue();
						} else if (text == 'is_bot') {
							is_bot = parser.getBooleanValue();
						} else if (text == 'first_name') {
							first_name = parser.getText();
						} else if (text == 'last_name') {
							last_name = parser.getText();
						} else if (text == 'language_code') {
							language_code = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'From_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Chat {
		public Integer tid {get;set;} 
		public String first_name {get;set;} 
		public String last_name {get;set;} 
		public String type_Z {get;set;} // in json: type

		public Chat(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					System.debug('this is text:'+text);
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'id') {
							tid = parser.getIntegerValue();
						} else if (text == 'first_name') {
							first_name = parser.getText();
						} else if (text == 'last_name') {
							last_name = parser.getText();
						} else if (text == 'type') {
							type_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Chat consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static TelegramJSON2Apex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new TelegramJSON2Apex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	







}